Configuration options
=====================
CONFIG_USE_LEGACY_TESTS: If defined, (only) the legacy test suites (Internal, External) will be run. [Default: OFF]
CONFIG_RUN_VERIFIED_ONLY: If defined, only variations that are expected to pass on RW61x will be run (Note: If you input unsupported blobs, the testcase will still run and fail) [Default: ON]
CONFIG_LARGE_BLOBS_ENABLED: If defined, testcases with large blobs > 2783B will be run (Requires TF-M changes to pass) [Default: OFF]

Create device specifiy blobs [EL2GO, Generic tests]
===================================================
1. Obtain a RTP JSON file from EL2GO containing the desired blobs for your board

2. Run the file trough the preprocessor:
scripts/el2go_blob_test_pre.py [RTP_JSON_PATH]

NOTE: Python >= 3.10 with packages from scripts/requirements.txt required

Create device specifiy blobs [Devicelink Commons, Legacy tests]
===============================================================
NOTE: This method only works for RW61x A1 RD boards with raw key material available (NXP Provisioned).

1. Checkout and configure the IOTHUB/iothub-device-link-commons repository

2. Get the WRAPPING key (NXP_DIE_EL2GOIMPORT_KEK_SK), ENC key (NXP_DIE_EL2GOIMPORTTFM_KEK_SK) and MAC key (NXP_DIE_EL2GOIMPORT_AUTH_SK) for your board

3. Run the following commands, filling in your keys as hex string:
mvn test -Dtest=PSAKeyImportTest,PSAExternalKeyImportTest -Dmaven.test.redirectTestOutputToFile=true \
-DargLine="-DwrappingKey=[YOUR_WRAPPING_KEY] -DencKey=[YOUR_ENC_KEY] -DmacKey=[YOUR_MAC_KEY] -DoutputCHeader=true"

4. Put the generated blobs in the correct header files:
cat target/surefire-reports/com.nxp.iot.devicelink.psa.command.PSAKeyImportTest-output.txt > [PATH_TO_THIS_DIRECTORY]/inc/el2go_blob_test_suite_internal.h
cat target/surefire-reports/com.nxp.iot.devicelink.psa.command.PSAExternalKeyImportTest-output.txt > [PATH_TO_THIS_DIRECTORY]/inc/el2go_blob_test_suite_external.h

5. Define the CONFIG_USE_LEGACY_TESTS macro in el2go_blob_test_ns

Build and run [MCUXpresso SDK]
==============================
1. Generate the projects:
west sdkgen -b frdmrw612,rdrw612bga -p el2go_blob_test_s,el2go_blob_test_ns

2. Build the projects in the following order:
el2go_blob_test_s -> el2go_blob_test_ns

3. Flash both el2go_blob_test_s and el2go_blob_test_ns to your board

Build and run [Zephyr]
======================
1. Build the project:
west build -b [frdm_rw612_ns|rd_rw612_bga_ns] [PATH_TO_THIS_DIRECTORY]

2. Flash both tfm_s and the zephyr app to your board

Postprocessing [JUnit]
======================
If you capure the console output of the test application, you can feed it into the postprocessor to recieve the results in the JUnit format:
scripts/el2go_blob_test_post.py [CONSOLE_OUTPUT_PATH] [JUNIT_OUT_PATH]

Notes on RW61x blobs
====================
- Make sure the lifecycle (and RKTH, if provisioned) of your blobs match the one of the board
- If using A1 RD boards, you need to change the key_properties of NXP_DIE_EL2GOIMPORT_KEK_SK, NXP_DIE_EL2GOIMPORTTFM_KEK_SK and NXP_DIE_EL2GOIMPORT_AUTH_SK in mcuxClPsaDriver_Oracle.c from 0x4XXXXXXXU to 0x8XXXXXXXU
- If using A2 RD or FRDM boards with lifecycle OEM Open/Closed, secure boot needs to be enabled for blob importing to work
